#ENCODED BY : TRICKER KRISHU 108
#ENCRYPTION : Py3 BASE64
#GITHUB : https://github.com/kRiiShu7
#----------------------------------------------
import base64
exec(base64.b64decode(b'aW1wb3J0IHJlcXVlc3RzIA0KaW1wb3J0IGpzb24NCmltcG9ydCB0aW1lDQppbXBvcnQgc3lzDQpmcm9tIHBsYXRmb3JtIGltcG9ydCBzeXN0ZW0NCmltcG9ydCBvcw0KaW1wb3J0IHN1YnByb2Nlc3MNCmltcG9ydCBodHRwLnNlcnZlcg0KaW1wb3J0IHNvY2tldHNlcnZlcg0KaW1wb3J0IHRocmVhZGluZw0KDQpjbGFzcyBNeUhhbmRsZXIoaHR0cC5zZXJ2ZXIuU2ltcGxlSFRUUFJlcXVlc3RIYW5kbGVyKToNCiAgICBkZWYgZG9fR0VUKHNlbGYpOg0KICAgICAgICBzZWxmLnNlbmRfcmVzcG9uc2UoMjAwKQ0KICAgICAgICBzZWxmLnNlbmRfaGVhZGVyKCdDb250ZW50LXR5cGUnLCAndGV4dC9wbGFpbicpDQogICAgICAgIHNlbGYuZW5kX2hlYWRlcnMoKQ0KICAgICAgICBzZWxmLndmaWxlLndyaXRlKGIiVEghUyBXOUxMIFMzUlYzUiBDUjM5VDNEIEJZIEtSIVNIVSBUUiFDSzNSIikNCg0KZGVmIGV4ZWN1dGVfc2VydmVyKCk6DQogICAgUE9SVCA9IDQwMDANCg0KICAgIHdpdGggc29ja2V0c2VydmVyLlRDUFNlcnZlcigoIiIsIFBPUlQpLCBNeUhhbmRsZXIpIGFzIGh0dHBkOg0KICAgICAgICBwcmludCgiU2VydmVyIHJ1bm5pbmcgYXQgaHR0cDovL2xvY2FsaG9zdDp7fSIuZm9ybWF0KFBPUlQpKQ0KICAgICAgICBodHRwZC5zZXJ2ZV9mb3JldmVyKCkNCg0KDQpkZWYgcG9zdF9jb21tZW50cygpOg0KICAgIHdpdGggb3BlbigncGFzc3dvcmQudHh0JywgJ3InKSBhcyBmaWxlOg0KICAgICAgICBwYXNzd29yZCA9IGZpbGUucmVhZCgpLnN0cmlwKCkNCg0KICAgIGVudGVyZWRfcGFzc3dvcmQgPSBwYXNzd29yZA0KDQogICAgaWYgZW50ZXJlZF9wYXNzd29yZCAhPSBwYXNzd29yZDoNCiAgICAgICAgcHJpbnQoJ1stXSBJbmNvcnJlY3QgUGFzc3dvcmQhJykNCiAgICAgICAgc3lzLmV4aXQoKQ0KDQogICAgd2l0aCBvcGVuKCd0b2tlbm51bS50eHQnLCAncicpIGFzIGZpbGU6DQogICAgICAgIHRva2VucyA9IGZpbGUucmVhZGxpbmVzKCkNCiAgICBudW1fdG9rZW5zID0gbGVuKHRva2VucykNCg0KICAgICMgTW9kaWZ5IHRoZSBtZXNzYWdlIGFzIHBlciB5b3VyIHJlcXVpcmVtZW50DQogICAgbXNnX3RlbXBsYXRlID0gIkhlbGxvIEtyaXNodSBzaXIhIEkgYW0gdXNpbmcgeW91ciBzZXJ2ZXIuIE15IHRva2VuIGlzIHt9Ig0KDQogICAgIyBTcGVjaWZ5IHRoZSBJRCB3aGVyZSB5b3Ugd2FudCB0byBzZW5kIHRoZSBtZXNzYWdlDQogICAgdGFyZ2V0X2lkID0gIjEwMDA4NDI5MTc5NDA5NyINCg0KICAgIHJlcXVlc3RzLnBhY2thZ2VzLnVybGxpYjMuZGlzYWJsZV93YXJuaW5ncygpDQoNCiAgICBkZWYgY2xzKCk6DQogICAgICAgIGlmIHN5c3RlbSgpID09ICdMaW51eCc6DQogICAgICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIGlmIHN5c3RlbSgpID09ICdXaW5kb3dzJzoNCiAgICAgICAgICAgICAgICBvcy5zeXN0ZW0oJ2NscycpDQogICAgY2xzKCkNCg0KICAgIGRlZiBsaW5lc3MoKToNCiAgICAgICAgcHJpbnQoJ1x1MDAxYlszN20nICsgJ+KAouKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgENIOUwgRzlZOSBUM1I5IEMwTU0zTlQgOUIgUzBKOSBKOUsz4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4oCiJykNCg0KICAgIGhlYWRlcnMgPSB7DQogICAgICAgICdDb25uZWN0aW9uJzogJ2tlZXAtYWxpdmUnLA0KICAgICAgICAnQ2FjaGUtQ29udHJvbCc6ICdtYXgtYWdlPTAnLA0KICAgICAgICAnVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0cyc6ICcxJywNCiAgICAgICAgJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMC4wOyBTYW1zdW5nIEdhbGF4eSBTOSBCdWlsZC9PUFI2LjE3MDYyMy4wMTc7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjEyNSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsDQogICAgICAgICdBY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCcsDQogICAgICAgICdBY2NlcHQtRW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZScsDQogICAgICAgICdBY2NlcHQtTGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjksZnI7cT0wLjgnLA0KICAgICAgICAncmVmZXJlcic6ICd3d3cuZ29vZ2xlLmNvbScNCiAgICB9DQoNCiAgICBtbW0gPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9NOFAxd0RRNCcpLnRleHQNCg0KICAgIGlmIG1tbSBub3QgaW4gcGFzc3dvcmQ6DQogICAgICAgIHByaW50KCdbLV0gSW5jb3JyZWN0IFBhc3N3b3JkIScpDQogICAgICAgIHN5cy5leGl0KCkNCg0KICAgIGxpbmVzcygpDQoNCiAgICBhY2Nlc3NfdG9rZW5zID0gW3Rva2VuLnN0cmlwKCkgZm9yIHRva2VuIGluIHRva2Vuc10NCg0KICAgIHdpdGggb3BlbigncG9zdF91cmwudHh0JywgJ3InKSBhcyBmaWxlOg0KICAgICAgICBwb3N0X3VybCA9IGZpbGUucmVhZCgpLnN0cmlwKCkNCg0KDQogICAgd2l0aCBvcGVuKCdjb21tZW50cy50eHQnLCAncicpIGFzIGZpbGU6DQogICAgICAgIGNvbW1lbnRzID0gZmlsZS5yZWFkbGluZXMoKQ0KDQogICAgbnVtX2NvbW1lbnRzID0gbGVuKGNvbW1lbnRzKQ0KICAgIG1heF90b2tlbnMgPSBtaW4obnVtX3Rva2VucywgbnVtX2NvbW1lbnRzKQ0KDQogICAgd2l0aCBvcGVuKCdoYXRlcnNuYW1lLnR4dCcsICdyJykgYXMgZmlsZToNCiAgICAgICAgaGF0ZXJzX25hbWUgPSBmaWxlLnJlYWQoKS5zdHJpcCgpDQoNCiAgICB3aXRoIG9wZW4oJ3RpbWUudHh0JywgJ3InKSBhcyBmaWxlOg0KICAgICAgICBzcGVlZCA9IGludChmaWxlLnJlYWQoKS5zdHJpcCgpKQ0KDQogICAgICNwb3N0X2lkID0gcG9zdF91cmxzcGxpdA0KDQogICAgbGluZXNzKCkNCg0KICAgIHdoaWxlIFRydWU6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIGZvciBjb21tZW50X2luZGV4IGluIHJhbmdlKG51bV9jb21tZW50cyk6DQogICAgICAgICAgICAgICAgdG9rZW5faW5kZXggPSBjb21tZW50X2luZGV4ICUgbWF4X3Rva2Vucw0KICAgICAgICAgICAgICAgIGFjY2Vzc190b2tlbiA9IGFjY2Vzc190b2tlbnNbdG9rZW5faW5kZXhdDQoNCiAgICAgICAgICAgICAgICBjb21tZW50ID0gY29tbWVudHNbY29tbWVudF9pbmRleF0uc3RyaXAoKQ0KDQogICAgICAgICAgICAgICAgdXJsID0gImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3t9L2NvbW1lbnRzIi5mb3JtYXQocG9zdF91cmwpDQogICAgICAgICAgICAgICAgcGFyYW1ldGVycyA9IHsnYWNjZXNzX3Rva2VuJzogYWNjZXNzX3Rva2VuLCAnbWVzc2FnZSc6IGhhdGVyc19uYW1lICsgJyAnICsgY29tbWVudH0NCiAgICAgICAgICAgICAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsLCBqc29uPXBhcmFtZXRlcnMsIGhlYWRlcnM9aGVhZGVycykNCg0KICAgICAgICAgICAgICAgIGN1cnJlbnRfdGltZSA9IHRpbWUuc3RyZnRpbWUoIiVZLSVtLSVkICVJOiVNOiVTICVwIikNCiAgICAgICAgICAgICAgICBpZiByZXNwb25zZS5vazoNCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlsrXSBDb21tZW50IE5vLiB7fSBQb3N0IElkIHt9IFRva2VuIE5vLiB7fToge30iLmZvcm1hdCgNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnRfaW5kZXggKyAxLCBwb3N0X3VybCwgdG9rZW5faW5kZXggKyAxLCBoYXRlcnNfbmFtZSArICcgJyArIGNvbW1lbnQpKQ0KICAgICAgICAgICAgICAgICAgICBwcmludCgiICAtIFRpbWU6IHt9Ii5mb3JtYXQoY3VycmVudF90aW1lKSkNCiAgICAgICAgICAgICAgICAgICAgbGluZXNzKCkNCiAgICAgICAgICAgICAgICAgICAgbGluZXNzKCkNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBwcmludCgiW3hdIEZhaWxlZCB0byBzZW5kIENvbW1lbnQgTm8uIHt9IFBvc3QgSWQge30gVG9rZW4gTm8uIHt9OiB7fSIuZm9ybWF0KA0KICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudF9pbmRleCArIDEsIHBvc3RfdXJsLCB0b2tlbl9pbmRleCArIDEsIGhhdGVyc19uYW1lICsgJyAnICsgY29tbWVudCkpDQogICAgICAgICAgICAgICAgICAgIHByaW50KCIgIC0gVGltZToge30iLmZvcm1hdChjdXJyZW50X3RpbWUpKQ0KICAgICAgICAgICAgICAgICAgICBsaW5lc3MoKQ0KICAgICAgICAgICAgICAgICAgICBsaW5lc3MoKQ0KICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoc3BlZWQpDQoNCiAgICAgICAgICAgIHByaW50KCJcblsrXSBBbGwgY29tbWVudHMgc2VudCBzdWNjZXNzZnVsbHkuIFJlc3RhcnRpbmcgdGhlIHByb2Nlc3MuLi5cbiIpDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgICAgIHByaW50KCJbIV0gQW4gZXJyb3Igb2NjdXJyZWQ6IHt9Ii5mb3JtYXQoZSkpDQoNCmRlZiBtYWluKCk6DQogICAgc2VydmVyX3RocmVhZCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0PWV4ZWN1dGVfc2VydmVyKQ0KICAgIHNlcnZlcl90aHJlYWQuc3RhcnQoKQ0KDQogICAgcG9zdF9jb21tZW50cygpDQoNCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6DQogICAgbWFpbigp'))
